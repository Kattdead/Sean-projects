import torch
import cv2
import numpy as np
from roboflow import Roboflow

# Load YOLOv10 model (Ensure model is trained and stored)
model_path = "yolov10_best.pt"  # Update with actual path
model = torch.hub.load("ultralytics/yolov5", "custom", path=model_path, force_reload=True)

# Initialize Roboflow API for dataset access
rf = Roboflow(api_key="your_roboflow_api_key")
project = rf.workspace().project("pothole-detection")
dataset = project.version(1).download("yolov5")

def detect_potholes(image_path):
    """Detect potholes in an image using YOLOv10 model."""
    image = cv2.imread(image_path)
    results = model(image)
    
    for *box, conf, cls in results.xyxy[0]:
        x1, y1, x2, y2 = map(int, box)
        label = f"Pothole: {conf:.2f}"
        cv2.rectangle(image, (x1, y1), (x2, y2), (0, 0, 255), 2)
        cv2.putText(image, label, (x1, y1 - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)
    
    cv2.imshow("Pothole Detection", image)
    cv2.waitKey(0)
    cv2.destroyAllWindows()

if __name__ == "__main__":
    test_image = "test_image.jpg"  # Update with actual image path
    detect_potholes(test_image)
